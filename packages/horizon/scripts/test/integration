#!/bin/bash

set -eo pipefail

# Set environment variables for this script
export SECURE_ACCOUNTS_DISABLE_PROVIDER=true

# Function to cleanup resources
cleanup() {
    # Kill hardhat node only if we started it
    if [ ! -z "$NODE_PID" ] && [ "$STARTED_NODE" = true ]; then
        echo "Cleaning up node process..."
        kill $NODE_PID 2>/dev/null || true
    fi
}

# Set trap to call cleanup function on script exit (normal or error)
trap cleanup EXIT

# Check if ignition deployment folder exists and prompt before proceeding
if [ -d "ignition/deployments/horizon-localhost" ]; then
    read -p "Ignition deployment files already exist. These must be removed for the tests to work properly. Remove them? (y/n) [y]: " confirm
    confirm=${confirm:-y}
    if [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]]; then
        echo "Removing existing ignition deployment files..."
        rm -rf ignition/deployments/horizon-localhost
    else
        echo "Cannot continue with existing deployment files. Exiting."
        exit 1
    fi
fi

# Check required env variables
ARBITRUM_SEPOLIA_RPC=${ARBITRUM_SEPOLIA_RPC:-$(npx hardhat vars get ARBITRUM_SEPOLIA_RPC)}
if [ -z "$ARBITRUM_SEPOLIA_RPC" ]; then
    echo "ARBITRUM_SEPOLIA_RPC environment variable is required"
    exit 1
fi

echo "Starting integration tests..."

# Check if hardhat node is already running on port 8545
STARTED_NODE=false
if lsof -i:8545 > /dev/null 2>&1; then
    echo "Hardhat node already running on port 8545, using existing node"
    # Get the PID of the process using port 8545
    NODE_PID=$(lsof -t -i:8545)
else
    # Start local hardhat node forked from Arbitrum Sepolia
    echo "Starting local hardhat node..."
    npx hardhat node --fork $ARBITRUM_SEPOLIA_RPC > node.log 2>&1 &
    NODE_PID=$!
    STARTED_NODE=true

    # Wait for node to start
    sleep 10
fi

# Setup horizon address book
jq '{"31337": ."421614"}' addresses.json > addresses-localhost.json

# Setup pre horizon migration state needed for the integration tests
npx hardhat test:integration:pre-upgrade --network localhost

# Transfer ownership of protocol to hardhat signer 1
npx hardhat test:integration:transfer-ownership --network localhost

# Step 1 - Deployer
npx hardhat deploy:migrate --network localhost --horizon-config integration --step 1 --account-index 0

# Step 2 - Governor
npx hardhat deploy:migrate --network localhost --horizon-config integration --step 2 --patch-config --account-index 1 --hide-banner

# Step 3 - Deployer
npx hardhat deploy:migrate --network localhost --horizon-config integration --step 3 --patch-config --account-index 0 --hide-banner

# Step 4 - Governor
npx hardhat deploy:migrate --network localhost --horizon-config integration --step 4 --patch-config --account-index 1 --hide-banner

# Unset subgraph service
npx hardhat transition:unset-subgraph-service --network localhost --governor-index 1

# Run integration tests - During transition period
npx hardhat test:integration --phase during-transition-period --network localhost

# Clear thawing period
npx hardhat transition:clear-thawing --network localhost --governor-index 1

# Run integration tests - After transition period
npx hardhat test:integration --phase after-transition-period --network localhost

# Enable delegation slashing
npx hardhat transition:enable-delegation-slashing --network localhost --governor-index 1

# Run integration tests - After delegation slashing enabled
npx hardhat test:integration --phase after-delegation-slashing-enabled --network localhost

echo ""
echo "ðŸŽ‰ âœ¨ ðŸš€ âœ… Integration tests completed successfully! ðŸŽ‰ âœ¨ ðŸš€ âœ…"
echo ""