#!/bin/bash

TESTRPC_PORT=${TESTRPC_PORT:-8545}
MAX_RETRIES=120

evm_running() {
  lsof -i:$TESTRPC_PORT -t > /dev/null
}

evm_ping() {
  PORT=$1
  curl --location --request POST "localhost:$PORT/" \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "jsonrpc":"2.0",
      "method":"web3_clientVersion",
      "params":[],
      "id":1
    }'
}

evm_automine() {
  curl --location --request POST "localhost:$TESTRPC_PORT/" \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "jsonrpc":"2.0",
      "method":"evm_setAutomine",
      "params":[true],
      "id":1
    }'
    echo
}

evm_start() {
  local FORK_URL=$1
  local FORK_BLOCK_NUMBER="$2"
  echo "Starting our own evm instance at port $TESTRPC_PORT"
  if [[ -n "$FORK_URL" ]]; then
    if [[ "$FORK_BLOCK_NUMBER" == "latest" ]]; then
      npx hardhat node --port "$TESTRPC_PORT" --fork "$FORK_URL" > /dev/null &
    else
      npx hardhat node --port "$TESTRPC_PORT" --fork "$FORK_URL" --fork-block-number "$FORK_BLOCK_NUMBER" > /dev/null &
    fi
  else
    npx hardhat node --port "$TESTRPC_PORT" > /dev/null & 
  fi
  retries=0
  while ! evm_ping $TESTRPC_PORT; do
    ((retries=retries+1))
    if [ $retries -gt $MAX_RETRIES ]; then
      echo "Timeout waiting for evm instance"
      exit 1
    fi
    sleep 1
  done

  echo -e "\nEVM instance is ready"
}

evm_kill() {
  if evm_running; then
    echo "Killing evm instance at port $TESTRPC_PORT"
    kill -9 $(lsof -i:$TESTRPC_PORT -t)
  fi
}
